#ifndef _INCLUDE_GUARD_MATERIAL_H_
#define _INCLUDE_GUARD_MATERIAL_H_



//==================================================================================================================================
// インクルード
//==================================================================================================================================

#ifndef _INCLUDE_GUARD_MYUTILITYLIB_H_
#include <MyUtilityLib.h>
#endif	// #ifndef _INCLUDE_GUARD_MYUTILITYLIB_H_

#ifndef _INCLUDE_GUARD_TEXTURERESOURCELIBRARY_H_
#include "../../../Library/Texture/TextureResourceLibrary.h"
#endif	// #ifndef _INCLUDE_GUARD_TEXTURERESOURCELIBRARY_H_



//==================================================================================================================================
// 名前空間
//==================================================================================================================================

//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : リソース名前空間
//
// @note : 
//
// リソース関連の関数やクラス等を管理する名前空間。
//----------------------------------------------------------------------------------------------------------------------------------
namespace NS_Resource
{


	
//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : モデル名前空間
//
// @note : 
//
// リソース関連の内、モデル関連の関数やクラス等を管理する名前空間。
//----------------------------------------------------------------------------------------------------------------------------------
namespace NS_Model
{



//==================================================================================================================================
// 構造体定義
//==================================================================================================================================

//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : マテリアル構造体
//
// @note : 
//
// マテリアルの要素をまとめた構造体。
//----------------------------------------------------------------------------------------------------------------------------------
struct MATERIAL
{
	// コンストラクタ
	MATERIAL() :  
		strMaterialName( "" ),
		uiTextureResourceID( 0 ),
		fShininess( 0 )
	{ }

	// デストラクタ
	~MATERIAL() 
	{
		// テクスチャをクリア
		NS_Texture::ClearTexture( uiTextureResourceID );



		// インデックスデータをクリア( メモリはモデルクラスで削除する )

		// 頂点座標インデックスデータをクリア
		vertexPositionIndexData.clear();

		// 法線インデックスデータをクリア
		normalIndexData.clear();

		// テクスチャ座標インデックスデータをクリア
		texcoordIndexData.clear();
	}



	// マテリアル名
	std::string						strMaterialName;

	// テクスチャリソースID
	unsigned int					uiTextureResourceID;

	// アンビエント
	Vector4DF						vec4Ambient;

	// ディフューズ
	Vector4DF						vec4Diffuse;

	// スペキュラ
	Vector4DF						vec4Specular;

	// 鏡面反射の強さ
	float							fShininess;

	// 頂点座標インデックスデータ
	std::vector<Vector3DI*>			vertexPositionIndexData;

	// 法線インデックスデータ
	std::vector<Vector3DI*>			normalIndexData;

	// テクスチャ座標インデックスデータ
	std::vector<Vector3DI*>			texcoordIndexData;
};



}	// namespace NS_Model



}	// namespace NS_Resource



#endif	// #ifndef _INCLUDE_GUARD_MATERIAL_H_