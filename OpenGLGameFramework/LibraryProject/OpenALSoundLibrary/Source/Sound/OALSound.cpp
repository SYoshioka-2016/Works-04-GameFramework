//==================================================================================================================================
// インクルード
//==================================================================================================================================
#ifndef _INCLUDE_GUARD_OALSOUND_H_
#include "OALSound.h"
#endif	// #ifndef _INCLUDE_GUARD_OALSOUND_H_

#ifndef _INCLUDE_GUARD_OALDEVICE_H_
#include "OALDevice.h"
#endif	// #ifndef _INCLUDE_GUARD_OALDEVICE_H_

#ifndef _INCLUDE_GUARD_OALSOUNDSOURCEMANAGER_H_
#include "OALSoundSourceManager.h"
#endif	// #ifndef _INCLUDE_GUARD_OALSOUNDSOURCEMANAGER_H_



//==================================================================================================================================
// 関数定義
//==================================================================================================================================

//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : OpenALの初期化
//
// @note : 
//
// OpenALの初期化処理を行う。
// サウンド関連の操作を行うには、事前にこの処理が必要。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::InitializeOpenAL() 
{
	// OpenALデバイスの初期化
	if ( FAILED( OALDevice::Instance()->Initialize() ) )
	{
		HALT( "OpenALデバイスの初期化に失敗しました。" );
	}
}



//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : サウンドの読み込み
//
// @param [in] / const char* pcFileName	: ディレクトリと拡張子を含むサウンドファイル名
//
// @note : 
//
// サウンドファイルを読み込み、サウンドを生成する。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::Load( const char* pcFileName, const char* pcSetSoundName )
{
	OALSoundSourceManager::Instance()->Load( pcFileName, pcSetSoundName );
}



//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : サウンドの再生
//
// @param [in] / const char*	pcSoundName	: 指定のサウンドの読み込み時に設定したサウンド名
// @param [in] / const bool		bIsLoop		: ループするか?( true : ループする | false : ループしない )( 省略するとfalseになる )
//
// @note : 
//
// ( 指定の )サウンドを再生する。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::Play( const char* pcSoundName, const bool bIsLoop )
{
	OALSoundSourceManager::Instance()->Play( pcSoundName, bIsLoop );
}



//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : サウンドの一時停止
//
// @param [in] / const char* pcSoundName	: 指定のサウンドの読み込み時に設定したサウンド名
//
// @note : 
//
// ( 指定の )サウンドを一時停止する。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::Pause( const char* pcSoundName )
{
	OALSoundSourceManager::Instance()->Pause( pcSoundName );
}



//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : サウンドの停止
//
// @param [in] / const char* pcSoundName	: 指定のサウンドの読み込み時に設定したサウンド名
//
// @note : 
//
// ( 指定の )サウンドを停止する。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::Stop( const char* pcSoundName )
{
	OALSoundSourceManager::Instance()->Stop( pcSoundName );
}



//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : 音量の変更
//
// @param [in] / const float fVolume : 設定する音量( 範囲は0.0〜1.0 )
//
// @note : 
//
// サウンドソース全体の音量を設定する。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::ChangeVolume( const float fVolume ) 
{
	OALSoundSourceManager::Instance()->SetVolume( fVolume );
}



//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : 音量の変更
//
// @param [in] / const char* pcSoundName	: 指定のサウンドの読み込み時に設定したサウンド名
// @param [in] / const float fVolume		: 設定する音量( 範囲は0.0〜1.0 )
//
// @note : 
//
// 指定のサウンドソースの音量を変更する。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::ChangeVolume( const char* pcSoundName, const float fVolume ) 
{
	OALSoundSourceManager::Instance()->SetVolume( pcSoundName, fVolume );
}



//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : ピッチの変更
//
// @param [in] / const float fPitch : 設定するピッチ( 0.0以上 )
//
// @note : 
//
// サウンドソース全体のピッチを設定する。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::ChangePitch( const float fPitch ) 
{
	OALSoundSourceManager::Instance()->SetPitch( fPitch );
}



//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : ピッチの変更
//
// @param [in] / const char* pcSoundName	: 指定のサウンドの読み込み時に設定したサウンド名
// @param [in] / const float fPitch			: 設定するピッチ( 0.0以上 )
//
// @note : 
//
// 指定のサウンドソースのピッチを変更する。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::ChangePitch( const char* pcSoundName, const float fPitch ) 
{
	OALSoundSourceManager::Instance()->SetPitch( pcSoundName, fPitch );
}



//----------------------------------------------------------------------------------------------------------------------------------
// @purpose : サウンドのクリア
//
// @note : 
//
// コンテナ内のサウンドをクリアする。
//----------------------------------------------------------------------------------------------------------------------------------
extern void NS_Sound::Clear()
{
	OALSoundSourceManager::Instance()->Clear();
}